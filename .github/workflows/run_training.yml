name: CI/CD Pipeline for Housing Price Prediction

on:
  push:
    branches:
      - main
    paths:
      - 'MLProject/**'
  pull_request:
    branches:
      - main
    paths:
      - 'MLProject/**'
  workflow_dispatch:

jobs:
  build-and-train:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Set up Miniconda and Create/Activate Environment
      uses: conda-incubator/setup-miniconda@v3
      with:
        auto-update-conda: true
        python-version: 3.12
        channels: conda-forge,defaults
        environment-file: MLProject/conda.yaml
        activate-environment: housing-price-prediction-env
        auto-activate-base: false

    - name: Install MLflow
      # This step ensures mlflow is installed in the 'housing-price-prediction-env'
      # so your script can import and use it.
      run: |
        pip install mlflow
      # The shell is automatically configured by setup-miniconda

    - name: Start MLflow Tracking Server
      run: |
        nohup mlflow server --host 127.0.0.1 --port 5000 --backend-store-uri sqlite:///mlruns.db &
        sleep 5 # Give the server a moment to start
      shell: bash # Ensure bash shell is used for `nohup` and `&` commands

    - name: Run MLflow Project Directly
      env:
        # Keep this if your Python script is configured to connect to 127.0.0.1:5000
        # If your script *doesn't* call mlflow.set_tracking_uri(), this env var will be used by MLflow's default behavior.
        MLFLOW_TRACKING_URI: http://127.0.0.1:5000
      run: |
        # Directly execute your Python script.
        # The 'housing-price-prediction-env' is already active from the 'setup-miniconda' step,
        # so Python and all its dependencies (including mlflow) are available.
        python MLProject/modelling_project.py
      # The shell is automatically configured by setup-miniconda

    - name: Upload MLflow artifacts
      uses: actions/upload-artifact@v4
      with:
        name: mlflow-run-artifacts
        path: mlruns/
